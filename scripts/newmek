#!/usr/bin/ansible-playbook
---
- name: "Install latest version of mekhq"
  hosts: localhost
  gather_facts: true
  become: false
  vars:
    source_dir: "{{ '~/mm' | expanduser }}"
    inst_dir: "{{ '~/megamek' | expanduser }}"
    tarball_pattern: "[Mm]ek[Hh][Qq]*"
    manage_symlinks: false
    # fallback_fetch: 'http://repo.imladris.lan/repo//tarballs/megamek/MekHQ-0.50.0-SNAPSHOT.tar.gz'
    fallback_fetch: 'http://nwamek.zapto.org:3052/MekHQ-0.50.0-SNAPSHOT.tar.gz'
    megamek_heap_size_mb: "{{ [(ansible_facts.memtotal_mb * 0.25) | int, 4096] | max }}"
    var_debug: false
  tasks:
    - name: Show vars
      ansible.builtin.debug:
        msg:
          - "source_dir: {{ source_dir }}"
          - "inst_dir: {{ inst_dir }}"
          - "tarball_pattern: {{ tarball_pattern }}"
          - "fallback_fetch: {{ fallback_fetch }}"
          - "megamek_heap_size_mb: {{ megamek_heap_size_mb }}"

    - name: Check for necessary directories
      ansible.builtin.command:
        cmd: "test -d '{{ item }}'"
      changed_when: false
      loop:
        - "~/gitwork"
        - "~/gitwork/meks"
        - "~/gitwork/meks/custom_mtf"
        - "~/gitwork/meks/units"
        - "~/gitwork/meks/mmconf-standard"

    - name: Update meks repo
      ansible.builtin.command:
        cmd: git pull --all --prune --rebase --autostash --tags
        chdir: "~/gitwork/meks"
      ignore_errors: true
      changed_when: true

    - name: "Set mekhq spec"
      ansible.builtin.set_fact:
        mekhq_spec: '{{ source_dir }}/{{ tarball_pattern }}'

    - name: "Discover or retrieve mekhq"
      block:
        - name: "Discover mekhq versions"
          ansible.builtin.set_fact:
            mekhq_versions: '{{ mekhq_spec | fileglob }}'

        - name: "Check to see if we found one"
          ansible.builtin.assert:
            fail_msg: "Did not have a local mekhq, going to get one from {{ fallback_fetch }}"
            that:
              - mekhq_versions | length
      rescue:
        - name: Get latest mekhq from local source
          ansible.builtin.get_url:
            url: "{{ fallback_fetch }}"
            dest: "{{ source_dir }}"
            mode: "0644"
      always:
        - name: "Discover latest mekhq version"
          ansible.builtin.set_fact:
            latest_mekhq: '{{ mekhq_spec | fileglob | last }}'

    - name: "Set symlink specs for normal release"
      ansible.builtin.set_fact:
        mekhq_symlinks:
          - megamek
          - megameklab
          - mekhq

    - name: "Change symlink specs for SNAPSHOT versions"
      ansible.builtin.set_fact:
        mekhq_symlinks: "{{ mekhq_symlinks | map('regex_replace', '$', '-SNAPSHOT') | list }}"
      when: "'SNAPSHOT' in latest_mekhq"

    - name: Debug task var
      ansible.builtin.debug:
        var: latest_mekhq
      when: var_debug

    - name: "Determine mekhq dirname"
      ansible.builtin.set_fact:
        mekhq_dirname: "{{ latest_mekhq | basename | replace('.tar.gz', '') }}"

    - name: Debug task var
      ansible.builtin.debug:
        var: mekhq_dirname
      when: var_debug

    - name: "Determine mekhq fulldir"
      ansible.builtin.set_fact:
        mekhq_fulldir: "{{ inst_dir }}/{{ mekhq_dirname }}"

    - name: Debug task var
      ansible.builtin.debug:
        var: mekhq_fulldir
      when: var_debug

    - name: Check for previous installation
      ansible.builtin.stat:
        path: '{{ mekhq_fulldir }}'
      register: mekhq_previous

    - name: Remove previous installation
      ansible.builtin.file:
        path: '{{ mekhq_fulldir }}'
        state: absent
      when: mekhq_previous.stat.exists

    - name: Extract mekhq tarball
      ansible.builtin.command:
        cmd: 'tar xvf {{ latest_mekhq }}'
        chdir: '{{ inst_dir }}'

    - name: Remove any extra directories
      ansible.builtin.file:
        path: "{{ mekhq_fulldir }}/data/mechfiles/{{ item }}"
        state: absent
      loop:
        - battlearmor
        - convfighter
        - dropships
        - fighters
        - ge
        - infantry
        - jumpships
        - mechs
        - protomechs
        - smallcraft
        - spacestation
        - vehicles
        - warship

    - name: Archive default config
      ansible.builtin.command:
        cmd: cp -a mmconf mmconf-orig
        chdir: "{{ mekhq_fulldir }}"
        creates: mmconf-orig

    - name: Check for template config directory
      ansible.builtin.stat:
        path: ~/gitwork/meks/mmconf-standard
      register: mmconf

    - name: Copy in standard config
      ansible.builtin.shell:
        cmd: 'cp -a ~/gitwork/meks/mmconf-standard/* mmconf'
        chdir: "{{ mekhq_fulldir }}"
      changed_when: true
      when: mmconf.stat.exists

    - name: Symlink unit lists
      ansible.builtin.file:
        src: '~/gitwork/meks/units'
        dest: "{{ mekhq_fulldir }}/units"
        state: link

    - name: Ensure savegames directory
      ansible.builtin.file:
        path: "{{ mekhq_fulldir }}/savegames"
        state: directory
        mode: "0755"

    - name: Symlink custom unit definitions
      ansible.builtin.file:
        src: '~/gitwork/meks/custom_mtf'
        dest: "{{ mekhq_fulldir }}/data/mechfiles/custom_mtf"
        state: link

    - name: Enable sentry for error reporting
      ansible.builtin.copy:
        content: "enabled=true\n"
        dest: "{{ mekhq_fulldir }}/sentry.properties"

    - name: "Adjust Megamek Heap size"
      ansible.builtin.replace:
        path: '{{ mekhq_fulldir }}/bin/MegaMek'
        regexp: '-Xmx\d+m'
        replace: '-Xmx{{ megamek_heap_size_mb }}m'

    - name: Setup symlinks
      block:
        - name: Remove previous symlinks
          ansible.builtin.file:
            path: '{{ inst_dir }}/{{ item }}'
            state: absent
          loop: '{{ mekhq_symlinks }}'

        - name: Add new symlinks
          ansible.builtin.command:
            cmd: 'ln -s {{ mekhq_dirname }} {{ item }}'
            chdir: '{{ inst_dir }}'
          loop: '{{ mekhq_symlinks }}'
